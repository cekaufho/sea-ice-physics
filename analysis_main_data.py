#%% 09.02.2021
# Code was generated by Christine Kaufhold as a part of a sea ice physics course
# Please do not use for research purposes unless you let me know
# This code can plot the raw data and difference in data

from netCDF4 import Dataset, num2date
from scipy.interpolate import griddata
from matplotlib.colors import ListedColormap
from matplotlib.animation import FuncAnimation
from mpl_toolkits.basemap import Basemap
import matplotlib.pylab as plt
from matplotlib import cm
import numpy.ma as ma
import pandas as pd
import numpy as np
import xarray
import csv
import os

from datetime import datetime
dateparse = lambda x: datetime.strptime(x, '%Y-%m-%d %H:%M:%S')
os.environ["PROJ_LIB"] = "C:\\

#%% Arctic Sea Ice Data

data_r = xarray.open_dataset("arctic_seaice_climate_indicators_nh_v01r01_1979-2017.nc")
data = Dataset("arctic_seaice_climate_indicators_nh_v01r01_1979-2017.nc", mode='r')
latitude = data.variables["latitude"][:]
longitude = data.variables["longitude"][:]

#time = data.variables["time"][:]
#time_unit = data.variables["time"].getncattr('units')
#time_cal = data.variables["time"].getncattr('calendar')
#time = num2date(time, units=time_unit, calendar=time_cal)

iifp = data.variables["IIFP"][:]
iifp_masked = (iifp < 0)
iifp = np.ma.array(iifp, mask=iifp_masked)    


oifp = data.variables["OIFP"][:]
oifp_masked = (oifp < 0)
oifp = np.ma.array(oifp, mask=oifp_masked) 

siz = data.variables["SIZ"][:]
slip = data.variables["SLIP"][:]

#%% Set=up Basemap

data.close()
m = Basemap(width=18.e6,height=9.e6, projection='gnom',lat_0=90.,lon_0=20., resolution='l')
m.drawmapboundary(fill_color='#13003D')
m.drawcoastlines(linewidth=0.50)
m.fillcontinents(color='#8b8b8b',lake_color='#8b8b8b')
m.drawparallels(np.arange(10,90,5), labels=[True,False,False,False])
m.drawmeridians(np.arange(-180,180, 25), labels=[False,False,False,True])

xi, yi = m(longitude, latitude)

#%% Plot

test = iifp[-1]-iifp[0]
cs = m.pcolor(xi, yi, test, vmin = test.min(), vmax=test.max(), cmap='jet') # gist_rainbow_r')
plt.title(r"IIFP, Year: 2017-1978", fontsize=13)
ticks = np.linspace(test.min(), test.max(), 11, endpoint=True)
#cs.set_clim(0,  365.0)
cbar = m.colorbar(cs, location='right', label="Change in days", ticks=ticks)
plt.gcf().set_size_inches(20, 5)
plt.show()